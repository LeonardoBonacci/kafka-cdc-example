version: '2.1'
services:
  zookeeper:
    image: debezium/zookeeper:1.4
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
  kafka:
    image: debezium/kafka:1.4
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
  my-db:
    image: postgres
    ports:
     - 5432:5432
    healthcheck:
      test: "pg_isready -U postgres -d postgres"
      interval: 2s
      timeout: 20s
      retries: 10
    environment:
     - POSTGRES_PASSWORD=mysecretpassword
     - PGPASSWORD=mysecretpassword
    command:
     - "postgres"
     - "-c"
     - "wal_level=logical"
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
  connect:
    image: debezium/strimzi-connect
    build:
      context: debezium-strimzi
    ports:
     - 8083:8083
    links:
     - kafka
     - my-db
    environment:
     - KAFKA_LOG4J_OPTS=-Dlog4j.configuration=file:/opt/kafka/config/connect-log4j.properties
     - KAFKA_CONNECT_BOOTSTRAP_SERVERS=kafka:9092
     - |
         KAFKA_CONNECT_CONFIGURATION=
         key.converter=org.apache.kafka.connect.json.JsonConverter
         value.converter=org.apache.kafka.connect.json.JsonConverter
         key.converter.schemas.enable=false
         value.converter.schemas.enable=false
         group.id=connect
         offset.storage.topic=connect-offsets
         offset.storage.replication.factor=1
         config.storage.topic=connect-configs
         config.storage.replication.factor=1
         status.storage.topic=connect-status
         status.storage.replication.factor=1
    command: /opt/kafka/kafka_connect_run.sh
  foo-service:
    image: leonardobonacci/foo-service
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile
    links:
     - kafka
     - my-db
    depends_on:
      my-db:
        condition: service_healthy
      connect:
        condition: service_started
